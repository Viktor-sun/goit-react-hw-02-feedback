{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","title","list","item","number","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Section","children","wrapperTitle","defaultProps","Notification","message","Container","App","state","handleIncrement","e","stateProperty","target","textContent","toLowerCase","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","round","this","totalValue","feedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27687c86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3fcOY\",\"list\":\"Statistics_list__3ZxjJ\",\"item\":\"Statistics_item__37msW\",\"number\":\"Statistics_number__2ZwDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptions\":\"FeedbackOptions_FeedbackOptions__1UmlG\",\"button\":\"FeedbackOptions_button__AKqWJ\",\"pulsate\":\"FeedbackOptions_pulsate__t_s34\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTitle\":\"Section_wrapperTitle__2GcrK\",\"title\":\"Section_title__17kT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__a9hWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1znNJ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2 className={styles.title}>Statistics</h2>\n    <ul className={styles.list}>\n      <li className={styles.item}>\n        Good: <span className={styles.number}>{good}</span>\n      </li>\n      <li className={styles.item}>\n        Neutral: <span className={styles.number}>{neutral}</span>\n      </li>\n      <li className={styles.item}>\n        Bad: <span className={styles.number}>{bad}</span>\n      </li>\n      <li className={styles.item}>\n        Total: <span className={styles.number}>{total}</span>\n      </li>\n      <li className={styles.item}>\n        Positive feedback:{' '}\n        <span className={styles.number}>{positivePercentage}%</span>\n      </li>\n    </ul>\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={styles.FeedbackOptions}>\n    {options.map(option => (\n      <li key={option}>\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <div className={styles.wrapperTitle}>\n      <h1 className={styles.title}>{title}</h1>\n    </div>\n\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: 'What will your feedback?',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <h2 className={styles.title}>{message}</h2>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleIncrement = e => {\n    const stateProperty = e.target.textContent.toLowerCase();\n    return this.setState(prevState => {\n      return { [stateProperty]: prevState[stateProperty] + 1 };\n    });\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage =\n      (this.state.good / this.countTotalFeedback()) * 100;\n    return positiveFeedbackPercentage\n      ? Math.round(positiveFeedbackPercentage)\n      : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalValue = this.countTotalFeedback();\n    const feedbackPercentage = this.countPositiveFeedbackPercentage();\n    const nameOptions = ['Good', 'Neutral', 'Bad'];\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <Container>\n          <FeedbackOptions\n            options={nameOptions}\n            onLeaveFeedback={this.handleIncrement}\n          />\n          {totalValue ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalValue}\n              positivePercentage={feedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport './assets/styles/common.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}